export declare class TRPCError<TCode extends string = string> extends Error {
    readonly originalError?: unknown;
    readonly code: TCode;
    constructor({ message, code, originalError, }: {
        message: string;
        code: TCode;
        originalError?: unknown;
    });
}
export interface TRPCErrorOptions {
    originalError?: unknown;
}
export declare const inputValidationError: (message: string, opts?: TRPCErrorOptions) => TRPCError<"BAD_USER_INPUT">;
export declare const notFoundError: (message: string, opts?: TRPCErrorOptions) => TRPCError<"NOT_FOUND">;
export declare const internalServerError: (originalError: unknown) => TRPCError<"INTERNAL_SERVER_ERROR">;
export declare function getMessageFromUnkownError(err: unknown, fallback: string): string;
export declare function getErrorFromUnknown(err: unknown): TRPCError;
